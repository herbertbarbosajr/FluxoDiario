// <auto-generated />
using System;
using FluxoDiario.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluxoDiario.DataAccess.Migrations
{
    [DbContext(typeof(FluxoDiarioDbContext))]
    partial class FluxoDiarioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.CaixaDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_caixas");

                    b.ToTable("caixas", (string)null);
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.LancamentoDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<int>("CaixaId")
                        .HasColumnType("int")
                        .HasColumnName("caixa_id");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_lancamento");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<double>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_lancamentos");

                    b.HasIndex("CaixaId")
                        .HasDatabaseName("ix_lancamentos_caixa_id");

                    b.ToTable("lancamentos", (string)null);
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.NovoLancamentoDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaixaId")
                        .HasColumnType("int")
                        .HasColumnName("caixa_id");

                    b.Property<int>("LancamentoId")
                        .HasColumnType("int")
                        .HasColumnName("lancamento_id");

                    b.Property<double>("SaldoAnterior")
                        .HasColumnType("float")
                        .HasColumnName("saldo_anterior");

                    b.Property<double>("SaldoAtual")
                        .HasColumnType("float")
                        .HasColumnName("saldo_atual");

                    b.HasKey("Id")
                        .HasName("pk_historico_lancamentos_caixa");

                    b.HasIndex("CaixaId")
                        .HasDatabaseName("ix_historico_lancamentos_caixa_caixa_id");

                    b.ToTable("historico_lancamentos_caixa", (string)null);
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.RelatorioDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("CaminhoArquivo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("caminho_arquivo");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int>("IdCaixa")
                        .HasColumnType("int")
                        .HasColumnName("id_caixa");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("pk_relatorios");

                    b.HasIndex("IdCaixa")
                        .HasDatabaseName("ix_relatorios_id_caixa");

                    b.ToTable("relatorios", (string)null);
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.LancamentoDataModel", b =>
                {
                    b.HasOne("FluxoDiario.DataAccess.Models.CaixaDataModel", "Caixa")
                        .WithMany("Lancamentos")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_lancamentos_caixas_caixa_id");

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.NovoLancamentoDataModel", b =>
                {
                    b.HasOne("FluxoDiario.DataAccess.Models.CaixaDataModel", "Caixa")
                        .WithMany("HistoricoLancamentos")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_historico_lancamentos_caixa_caixas_caixa_id");

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.RelatorioDataModel", b =>
                {
                    b.HasOne("FluxoDiario.DataAccess.Models.CaixaDataModel", "Caixa")
                        .WithMany()
                        .HasForeignKey("IdCaixa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_relatorios_caixas_id_caixa");

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("FluxoDiario.DataAccess.Models.CaixaDataModel", b =>
                {
                    b.Navigation("HistoricoLancamentos");

                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
